// Table creation 
CREATE TABLE groups (
id               INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, 
parent_id        INTEGER         , 
Name                TEXT NOT NULL, 
DateAdded           TEXT NOT NULL, 
NumDailyReports  INTEGER NOT NULL, 
GroupCode           TEXT UNIQUE NOT NULL, 
ObserverPassword    TEXT NOT NULL, 
MemberPassword      TEXT NOT NULL, 
AdminPassword       TEXT NOT NULL,  
group_size       INTEGER NOT NULL, 
FOREIGN KEY(parent_id) REFERENCES groups(id)
);

// Old implementation. See below for new 
CREATE TABLE users (
id       INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, 
group_id INTEGER NOT NULL, 
Name        TEXT NOT NULL, 
DateAdded   TEXT NOT NULL, 
chat_id     TEXT         , 
role        TEXT NOT NULL, 
FOREIGN KEY(group_id) REFERENCES groups(id)
);

CREATE TABLE users (
id       INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, 
group_id INTEGER NOT NULL, 
Name        TEXT NOT NULL, 
DateAdded   TEXT NOT NULL, 
rank     INTEGER NOT NULL, 
FOREIGN KEY(group_id) REFERENCES groups(id)
);

CREATE TABLE attendance (
id            INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, 
group_id      INTEGER NOT NULL, 
user_id       INTEGER NOT NULL, 
TimePeriod    INTEGER NOT NULL, 
Date             TEXT NOT NULL, 
AttendanceStatus TEXT NOT NULL, 
FOREIGN KEY(group_id) REFERENCES groups(id), 
FOREIGN KEY(user_id) REFERENCES users(id), 
CONSTRAINT unq UNIQUE(group_id, user_id, TimePeriod, Date)
); 

CREATE TABLE admins_dup (
id       INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, 
group_id INTEGER NOT NULL, 
DateAdded   TEXT NOT NULL, 
chat_id     TEXT NOT NULL, 
role        TEXT NOT NULL, 
FOREIGN KEY(group_id) REFERENCES groups(id)
);



// Inserting new group 
INSERT INTO groups (
parent_id, Name, DateAdded, GroupCode, 
ObserverPassword, MemberPassword, AdminPassword
) 
VALUES (?, ?, datetime('now'), ?, ?, ?, ?, ?)

INSERT INTO groups (
Name, DateAdded, GroupCode, 
ObserverPassword, MemberPassword, AdminPassword
)
VALUES (?, datetime('now'), ?, ?, ?, ?, ?)


Name                TEXT NOT NULL, 
DateAdded           TEXT NOT NULL, 
GroupCode           TEXT NOT NULL, 
ObserverPassword    TEXT NOT NULL, 
MemberPassword      TEXT NOT NULL, 
AdminPassword       TEXT NOT NULL, 



// Getting count of number of users in group 
SELECT COUNT(*) 
  FROM users
 WHERE users.group_id = ?



// Trial of updating attendance multiday 
                IF EXISTS(
                    SELECT * FROM attendance WHERE group_id = ? AND user_id = ? 
                       AND TimePeriod = ? AND Date = date('now', ?)
                )
                    BEGIN
                        UPDATE attendance
                        SET AttendanceStatus = ? 
                        WHERE group_id = ? AND user_id = ? AND TimePeriod = ? AND Date = date('now', ?)
                    END
                ELSE
                    BEGIN
                        INSERT INTO attendance
                        (AttendanceStatus, group_id, user_id, TimePeriod, Date)
                        VALUES (?, ?, ?, ?, date('now', ?)
                    END


// How to get the RunGroup that you need 
"""
SELECT group_id, user_id, Date, AttendanceStatus, (
SELECT COUNT(*) FROM attendance A
WHERE A.AttendanceStatus <> AT.AttendanceStatus 
AND A.Date <= AT.Date
AND A.user_id = AT.user_id 
AND A.group_id = AT.group_id 
) AS RunGroup 
FROM attendance AT
WHERE user_id = 29 
AND group_id = 14
AND Date > date('now') 
AND RunGroup = 0
ORDER BY Date DESC 
LIMIT 1
"""
(user_id, group_id, date_message)
